import java.time.Instant

/*
 * Created by Ramprasad Ranganathan on 10/06/21, 1:37 PM
 * Copyright (c) 2021. All rights reserved
 * Last modified 10/06/21, 1:36 PM
 */

plugins {
    id 'com.android.application'
    id 'kotlin-android'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'project-report'

android {
    compileSdkVersion "android-S"
    //compileSdkVersion 30
    //compileSdkVersion 31
    //def latestVersionCode

    defaultConfig {
        applicationId "dev.ramprasad.bloom"
        minSdkVersion 23
        //targetSdkVersion "S"
        targetSdkVersion 30
        versionCode 6
        versionName "1.0.6"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    packagingOptions {
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
    }

    /*gradle.taskGraph.whenReady {taskGraph ->
        if(taskGraph.hasTask(bundleProductionRelease)){
            taskGraph.getDependencies(bundleProductionDebug).add(doSomething)
            def versionPropsFile = file('version.properties')
            if (versionPropsFile.canRead()) {
                Properties versionProps = new Properties()
                versionProps.load(new FileInputStream(versionPropsFile))
                latestVersionCode = versionProps['VERSION_CODE'].toInteger() + 1
                versionProps['VERSION_CODE'] = latestVersionCode.toString()
                versionProps.store(versionPropsFile.newWriter(), null)
            } else {
                throw new FileNotFoundException("Could not read version.properties!")
            }
        }
    }*/

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions 'version'
    productFlavors{
        develop{
            dimension 'version'
            /*versionCode 1
            versionName "1.0.0"*/
        }
        production{
            dimension 'version'
            /*versionCode latestVersionCode
            versionName "1.0.0-"+latestVersionCode*/
        }
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerVersion "1.5.10"
        kotlinCompilerExtensionVersion '1.0.0-rc01'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation "androidx.core:core-ktx:1.7.0-alpha01"
    implementation "androidx.appcompat:appcompat:1.4.0-alpha03"
    implementation "com.google.android.material:material:1.5.0-alpha01"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.5.21"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.4.0-alpha02"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0-alpha02"

    // Core SplashScreen API(Android 12)
    implementation "androidx.core:core-splashscreen:1.0.0-alpha01"

    // Jetpack Compose UI
    implementation "androidx.compose.ui:ui:1.0.0"
    implementation "androidx.compose.ui:ui-tooling:1.0.0"
    implementation 'androidx.compose.foundation:foundation:1.0.0'
    implementation "androidx.compose.foundation:foundation-layout:1.0.0"
    implementation 'androidx.compose.material:material:1.0.0'
    implementation 'androidx.compose.material:material-icons-core:1.0.0'
    implementation 'androidx.compose.material:material-icons-extended:1.0.0'
    implementation 'androidx.activity:activity-compose:1.3.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:1.0.0-alpha08'
    implementation "androidx.compose.compiler:compiler:1.0.0"

    // Jetpack Compose Navigation
    implementation "androidx.navigation:navigation-compose:2.4.0-alpha05"

    // Accompanist for compose coil library & window inset library
    implementation 'com.google.accompanist:accompanist-coil:0.12.0'
    implementation 'com.google.accompanist:accompanist-insets:0.12.0'
    implementation 'com.google.accompanist:accompanist-placeholder-material:0.12.0'

    //Room
    implementation "androidx.room:room-runtime:2.4.0-alpha04"
    kapt "androidx.room:room-compiler:2.4.0-alpha04"
    implementation "androidx.room:room-ktx:2.4.0-alpha04"

    //Hilt
    implementation "com.google.dagger:hilt-android:2.36"
    implementation 'androidx.hilt:hilt-work:1.0.0'
    kapt "com.google.dagger:hilt-compiler:2.36"
    kapt 'androidx.hilt:hilt-compiler:1.0.0'
    implementation "androidx.hilt:hilt-navigation-compose:1.0.0-alpha03"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03"

    // App Startup
    implementation "androidx.startup:startup-runtime:1.1.0-rc01"

    // Work Manager
    implementation "androidx.work:work-runtime-ktx:2.7.0-alpha05"

    //Firebase BoM
    implementation platform("com.google.firebase:firebase-bom:28.2.0")
    implementation "com.google.firebase:firebase-auth-ktx"

    //Firebase Analytics
    implementation "com.google.firebase:firebase-analytics-ktx"

    // Firebase Firestore
    implementation 'com.google.firebase:firebase-firestore-ktx'

    // Testing
    testImplementation "junit:junit:4.13.2"

    androidTestImplementation "androidx.test.ext:junit:1.1.3"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:1.0.0"
    debugImplementation "androidx.compose.ui:ui-test-manifest:1.0.0"

    testImplementation "androidx.room:room-testing:2.3.0"

    // Hilt instrumentation testing
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.36'
    kaptAndroidTest 'com.google.dagger:hilt-compiler:2.36'

    // Hilt Local Unit testing
    testImplementation 'com.google.dagger:hilt-android-testing:2.36'
    kaptTest 'com.google.dagger:hilt-compiler:2.36'

    // Work Manager
    androidTestImplementation "androidx.work:work-testing:2.6.0-beta02"
}
apply plugin: 'com.google.gms.google-services'

